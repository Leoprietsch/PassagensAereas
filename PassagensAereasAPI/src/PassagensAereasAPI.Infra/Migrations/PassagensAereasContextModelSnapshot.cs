// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PassagensAereasAPI.Infra;

namespace PassagensAereasAPI.Infra.Migrations
{
    [DbContext(typeof(PassagensAereasContext))]
    partial class PassagensAereasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.ClasseDeVoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<double>("ValorFixoDoVoo");

                    b.Property<double>("ValorPorMilha");

                    b.HasKey("Id");

                    b.ToTable("ClasseDeVoo");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.Opcional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Opcional");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClasseDeVooId")
                        .IsRequired();

                    b.Property<int?>("TrechoId")
                        .IsRequired();

                    b.Property<int?>("UsuarioId");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ClasseDeVooId");

                    b.HasIndex("TrechoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.ReservaOpcional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OpcionalId")
                        .IsRequired();

                    b.Property<int?>("ReservaId");

                    b.HasKey("Id");

                    b.HasIndex("OpcionalId");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaOpcional");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.Trecho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Distancia");

                    b.Property<int?>("LocalDestinoId")
                        .IsRequired();

                    b.Property<int?>("LocalOrigemId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LocalDestinoId");

                    b.HasIndex("LocalOrigemId");

                    b.ToTable("Trecho");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<DateTime?>("DataDeNascimento")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.Reserva", b =>
                {
                    b.HasOne("PassagensAereasAPI.Dominio.Entidades.ClasseDeVoo", "ClasseDeVoo")
                        .WithMany()
                        .HasForeignKey("ClasseDeVooId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PassagensAereasAPI.Dominio.Entidades.Trecho", "Trecho")
                        .WithMany()
                        .HasForeignKey("TrechoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PassagensAereasAPI.Dominio.Entidades.Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.ReservaOpcional", b =>
                {
                    b.HasOne("PassagensAereasAPI.Dominio.Entidades.Opcional", "Opcional")
                        .WithMany()
                        .HasForeignKey("OpcionalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PassagensAereasAPI.Dominio.Entidades.Reserva")
                        .WithMany("ReservaOpcional")
                        .HasForeignKey("ReservaId");
                });

            modelBuilder.Entity("PassagensAereasAPI.Dominio.Entidades.Trecho", b =>
                {
                    b.HasOne("PassagensAereasAPI.Dominio.Entidades.Local", "LocalDestino")
                        .WithMany()
                        .HasForeignKey("LocalDestinoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PassagensAereasAPI.Dominio.Entidades.Local", "LocalOrigem")
                        .WithMany()
                        .HasForeignKey("LocalOrigemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
